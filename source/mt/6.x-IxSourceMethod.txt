
.. Ix Source Method

~!include/ixcompiler.IxSourceMethod.h~
#ifndef IXCOMPILER_IXSOURCEMETHOD_H
#define IXCOMPILER_IXSOURCEMETHOD_H

#include "ixcompiler.h"

IxSourceMethod* IxSourceMethod_new( const Node* modifierNode );

IxSourceMethod* IxSourceMethod_free             (       IxSourceMethod** self );
const char*     IxSourceMethod_getAccessModifier( const IxSourceMethod*  self );
const char*     IxSourceMethod_getConst         ( const IxSourceMethod*  self );
const char*     IxSourceMethod_getMethodName    ( const IxSourceMethod*  self );
const Array*    IxSourceMethod_getParameters    ( const IxSourceMethod*  self );
const char*     IxSourceMethod_getReturnType    ( const IxSourceMethod*  self );

#endif
~

~!c/ixcompiler.IxSourceMethod.c~
#include "ixcompiler.Array.h"
#include "ixcompiler.Console.h"
#include "ixcompiler.EnumTokenType.h"
#include "ixcompiler.IxSourceMethod.h"
#include "ixcompiler.IxSourceParameter.h"
#include "ixcompiler.IxSourceSignature.h"
#include "ixcompiler.Node.h"
#include "ixcompiler.NodeIterator.h"
#include "ixcompiler.Platform.h"
#include "ixcompiler.String.h"
#include "ixcompiler.Token.h"

struct _IxSourceMethod
{
    bool                      invalid;
    IxSourceSignature*        signature;
    Array*                    statements;
};
~

~c/ixcompiler.IxSourceMethod.c~
IxSourceMethod* IxSourceMethod_new( const Node* modifierNode )
{
    IxSourceMethod* self = Platform_Alloc( sizeof( IxSourceMethod ) );
    if ( self )
    {
        self->signature  = IxSourceSignature_new( modifierNode );
        self->statements = Array_new();
    }
    return self;
}
~

~c/ixcompiler.IxSourceMethod.c~
IxSourceMethod* IxSourceMethod_free( IxSourceMethod** self )
{
    if ( *self )
    {
        IxSourceSignature_free( &(*self)->signature  );
        Array_free            ( &(*self)->statements );

        Platform_Free( self );
    }
    return *self;
}
~

~c/ixcompiler.IxSourceMethod.c~
const char* IxSourceMethod_getAccessModifier( const IxSourceMethod* self )
{
    return String_content( IxSourceSignature_getAccessModifier( self->signature ) );
}
~

~c/ixcompiler.IxSourceMethod.c~
const char* IxSourceMethod_getConst( const IxSourceMethod* self )
{
    return String_content( IxSourceSignature_getConst( self->signature ) );
}
~

~c/ixcompiler.IxSourceMethod.c~
const char* IxSourceMethod_getMethodName( const IxSourceMethod* self )
{
    return String_content( IxSourceSignature_getMethodName( self->signature ) );
}
~

~c/ixcompiler.IxSourceMethod.c~
const Array* IxSourceMethod_getParameters( const IxSourceMethod* self )
{
    return IxSourceSignature_getParameters( self->signature );
}
~

~c/ixcompiler.IxSourceMethod.c~
const char* IxSourceMethod_getReturnType( const IxSourceMethod*  self )
{
    return String_content( IxSourceSignature_getReturnType( self->signature ) );
}
~
