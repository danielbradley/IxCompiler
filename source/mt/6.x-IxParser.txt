
~!include/ixcompiler.IxParser.h~
#ifndef IXCOMPILER_IXPARSER_H
#define IXCOMPILER_IXPARSER_H

#include "ix.h"
#include "ixcompiler.h"

IxParser*      IxParser_new           ( Tokenizer* tokenizer )                ;
IxParser*      IxParser_free          ( IxParser** self )                     ;
AST*           IxParser_parse         ( IxParser* self )                      ;

#endif
~

~!c/ixcompiler.IxParser.c~
#include "ixcompiler.AST.h"
#include "ixcompiler.EnumTokenGroup.h"
#include "ixcompiler.EnumTokenType.h"
#include "ixcompiler.IxParser.h"
#include "ixcompiler.Token.h"
#include "ixcompiler.TokenGroup.h"
#include "ixcompiler.Tokenizer.h"

struct _IxParser
{
    Tokenizer* tokenizer;
};

~

~c/ixcompiler.IxParser.c~
IxParser* IxParser_new( Tokenizer* tokenizer )
{
    IxParser* self = Platform_Alloc( sizeof(IxParser) );
    if ( self )
    {
        self->tokenizer = tokenizer;
    }
    return self;
}
~

~c/ixcompiler.IxParser.c~
IxParser* IxParser_free( IxParser** self )
{
    if ( *self )
    {
        (*self)->tokenizer = null;

        Platform_Free( self );
    }
    return *self;
}
~

~c/ixcompiler.IxParser.c~
AST* IxParser_parse( IxParser* self )
{
}
~
