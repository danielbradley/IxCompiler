
.. Entry

~!include/ixcompiler.Entry.h~
#ifndef IXCOMPILER_ENTRY_H
#define IXCOMPILER_ENTRY_H

#include "ixcompiler.h"

Entry* Entry_new           ( String** key, void** val );
Entry* Entry_new_destructor( String** key, void** val, Destructor destructor );

      Entry*  Entry_free    (       Entry** self );
const String* Entry_getKey  ( const Entry*  self );
const void*   Entry_getValue( const Entry*  self );

#endif
~

~!c/ixcompiler.Entry.c~
#include "ixcompiler.Entry.h"
#include "ixcompiler.Platform.h"
#include "ixcompiler.String.h"

struct _Entry
{
    Destructor destroy;
    String*    key;
    void*      val;

};
~

~c/ixcompiler.Entry.c~
Entry* Entry_new( String** key, void** val )
{
    Entry* self = Platform_Alloc( sizeof( Entry ) );
    if ( self )
    {
        self->key = Take( key );
        self->val = Take( val );
    }
    return self;
}
~

~c/ixcompiler.Entry.c~
Entry* Entry_new_destructor( String** key, void** val, Destructor destructor )
{
    Entry* self = Platform_Alloc( sizeof( Entry ) );
    if ( self )
    {
        self->destroy = destructor;
        self->key     = Take( key );
        self->val     = Take( val );
    }
    return self;
}
~

~c/ixcompiler.Entry.c~
Entry* Entry_free( Entry** self )
{
    if ( *self )
    {
        String_free( &(*self)->key );

        if ( (*self)->destroy )
        {
            (*self)->destroy( &(*self)->val );
        }
        Platform_Free( self );
    }
    return *self;
}
~

~c/ixcompiler.Entry.c~
const String* Entry_getKey( const Entry* self )
{
    return self->key;
}
~

~c/ixcompiler.Entry.c~
const void* Entry_getValue( const Entry* self )
{
    return self->val;
}
~
