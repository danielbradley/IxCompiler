
.. Files Iterator

~!include/ix/FilesIterator.h~
#ifndef IX_FILESITERATOR_H
#define IX_FILESITERATOR_H

FilesIterator* FilesIterator_new      ( const char** filepaths );
FilesIterator* FilesIterator_free     ( FilesIterator** self   );
bool           FilesIterator_hasNext  ( FilesIterator*  self   );
File*          FilesIterator_next     ( FilesIterator*  self   );

#endif
~

~!c/ix/FilesIterator.c~
#include <stdlib.h>
#include "ix.h"
#include "todo.h"

struct _FilesIterator
{
    const char** filepaths;
    int          next;
};
~

~c/ix/FilesIterator.c~
FilesIterator* FilesIterator_new( const char** filepaths )
{
    FilesIterator* self = calloc( 1, sizeof( FilesIterator ) );
    if ( self )
    {
        self->filepaths = filepaths;
        self->next      = 0;
    }
    return self;
}
~

~c/ix/FilesIterator.c~
FilesIterator* FilesIterator_free( FilesIterator** self )
{
    free( *self ); *self = 0;

    return *self;
}
~

~c/ix/FilesIterator.c~
bool FilesIterator_hasNext( FilesIterator* self )
{
    if ( null != self->filepaths[self->next] )
    {
        return TRUE;
    }
    else
    {
        return FALSE;
    }
}
~

~c/ix/FilesIterator.c~
File* FilesIterator_next( FilesIterator* self )
{
    if ( FilesIterator_hasNext( self ) )
    {
        Console_Write( "FilesIterator_next: %s\n", self->filepaths[self->next] );

        return File_new( self->filepaths[self->next++] );
    } else {
        return null;
    }
}
~
