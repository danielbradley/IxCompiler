.. Includes

~!include/ixcompiler.h~
//
// Copyright 2021 Daniel Robert Bradley
//

#ifndef IXCOMPILER_H
#define IXCOMPILER_H

#define ABORT_DIRECTORY_DOES_NOT_EXIST      "Aborting, output directory does not exist - %s\n"
#define ABORT_DIRECTORY_IS_NOT_WRITABLE     "Aborting, cannot write to output directory - %s\n"
#define ABORT_FILE_CANNOT_BE_READ           "Aborting, speciifed file cannot be read - %s\n"
#define ABORT_FILE_DOES_NOT_EXIST           "Aborting, specified file does not exist - %s\n"
#define ABORT_NO_OUTPUT_DIR                 "Aborting, no output directory specified (--output-dir)\n"
#define ABORT_NO_SOURCE_FILES               "Aborting, no source files specified\n"
#define ABORT_TARGET_LANGUAGE_NOT_SPECIFIED "Aborting, target language not specified (--target-language)\n"
#define ABORT_TARGET_LANGUAGE_NOT_SUPPORTED "Aborting, could not find generator for target language - %s\n"

#define ARGUMENT_DRY_RUN         "--dry-run"
#define ARGUMENT_OUTPUT_DIR      "--output-dir"
#define ARGUMENT_TARGET_LANGUAGE "--target-language"

#define LANG_C "C"

#ifndef bool
#define bool int
#endif

#ifndef null
#define null 0
#endif

#ifndef TRUE
#define TRUE 1
#endif

#ifndef FALSE
#define FALSE 0
#endif

#ifndef SUCCESS
#define SUCCESS 1
#endif

#ifndef FAILED
#define FAILED 0
#endif

#ifndef DISPOSABLE
#define DISPOSABLE
#endif

typedef struct _Arguments                       Arguments;
typedef struct _Array                           Array;
typedef struct _ArrayOfIxSourceFunction         ArrayOfIxSourceFunction;
typedef struct _ArrayOfIxSourceMember           ArrayOfIxSourceMember;
typedef struct _ArrayOfIxSourceMethod           ArrayOfIxSourceMethod;
typedef struct _ArrayOfIxSourceParameter        ArrayOfIxSourceParameter;
typedef struct _ArrayOfIxSourceStatement        ArrayOfIxSourceStatement;
typedef struct _ArrayOfString                   ArrayOfString;
typedef struct _AST                             AST;
typedef struct _ASTCollection                   ASTCollection;
typedef struct _Dictionary                      Dictionary;
typedef struct _Entry                           Entry;
typedef enum   _EnumTokenGroup                  EnumTokenGroup;
typedef enum   _EnumTokenType                   EnumTokenType;
typedef struct _File                            File;
typedef struct _FilesIterator                   FilesIterator;
typedef struct _Generator                       Generator;
typedef struct _IxParser                        IxParser;
typedef struct _IxSourceClass                   IxSourceClass;
typedef struct _IxSourceComment                 IxSourceComment;
typedef struct _IxSourceFunction                IxSourceFunction;
typedef struct _IxSourceHeader                  IxSourceHeader;
typedef struct _IxSourceInterface               IxSourceInterface;
typedef struct _IxSourceMember                  IxSourceMember;
typedef struct _IxSourceMethod                  IxSourceMethod;
typedef struct _IxSourceParameter               IxSourceParameter;
typedef struct _IxSourceSignature               IxSourceSignature;
typedef struct _IxSourceStatement               IxSourceStatement;
typedef struct _IxSourceType                    IxSourceType;
typedef struct _IxSourceUnit                    IxSourceUnit;
typedef struct _IxSourceUnitCollection          IxSourceUnitCollection;
typedef struct _Node                            Node;
typedef struct _NodeIterator                    NodeIterator;
typedef struct _Path                            Path;
typedef struct _PushbackReader                  PushbackReader;
typedef struct _Queue                           Queue;
typedef struct _String                          String;
typedef struct _StringBuffer                    StringBuffer;
typedef struct _Token                           Token;
typedef struct _TokenGroup                      TokenGroup;
typedef struct _Tokenizer                       Tokenizer;
typedef struct _Tree                            Tree;

typedef void* (*Destructor )( void**                                     );
typedef int   (*GeneratorFn)( const IxSourceUnitCollection*, const Path* );

void** Give( void* pointer );
void*  Take( void* giver   );

#endif
~
